{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\src\\\\views\\\\Grades\\\\Grades.jsx\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Card from \"components/Card/Card.jsx\";\nimport React, { Component } from 'react';\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.jsx\";\nimport { TableEditablePage } from \"views/Grades/editable_table.jsx\";\nimport InputForm from './InputForm';\nimport Point from 'views/Grades/edittable';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport App from 'views/Grades/table/index';\n\nfunction getData(url) {\n  return fetch(url, {\n    method: \"GET\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, cors, *same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: _defineProperty({\n      \"Content-Type\": \"application/json\"\n    }, \"Content-Type\", \"application/x-www-form-urlencoded\"),\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrer: \"no-referrer\" // no-referrer, *client\n    //body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n\n  }).then(function (response) {\n    return response.json();\n  }); // parses response to JSON\n}\n\nfunction postData(url, data) {\n  // Default options are marked with *\n  return fetch(url, {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, cors, *same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: _defineProperty({\n      \"Content-Type\": \"application/json\"\n    }, \"Content-Type\", \"application/x-www-form-urlencoded\"),\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrer: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n  }).then(function (response) {\n    return response.text();\n  }); // parses response to JSON\n}\n\nvar Grades =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Grades, _React$Component);\n\n  function Grades(props) {\n    var _this;\n\n    _classCallCheck(this, Grades);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grades).call(this, props));\n\n    _this.handleCheckboxChange = function (event) {\n      _this.setState({\n        checked: event.target.checked\n      });\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        console.log(name);\n\n        _this.setState(_defineProperty({}, name, event.target.checked));\n\n        _this.setState({\n          checked: !_this.state.checked\n        });\n      };\n    };\n\n    _this.updateInput = function (event) {\n      var state = {};\n      state[event.target.name] = event.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      postData(\"http://localhost/test_project-master (4)/test_project-master/src/views/Grades/create.php\", _this.state).then(function (data) {\n        return console.log(JSON.stringify(data));\n      }).catch(function (error) {\n        return console.error(error);\n      });\n      e.target.reset();\n    };\n\n    _this.state = {\n      data: [],\n      checked: false // this.getlevel=this.getlevel.bind(this);\n\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateInput = _this.updateInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Grades, [{\n    key: \"render\",\n\n    /*  getsubject=(e)=>{\n          e.preventDefault();\n          getData(`http://localhost/xx-master/src/views/Grades/gets.php`, this.state)\n              .then(data => console.log(JSON.stringify(data)))\n              .catch(error => console.error(error));\n      }*/\n    // _handleChange(event) {\n    //   let state = {};\n    //   this.setState({ value: event.target.value }) // I tried before target.value, or nativeEvent.value\n    // }\n    value: function render() {\n      var styleInput = {\n        width: \"50%\",\n        alignContent: \"Center\",\n        height: \"20px\",\n        margin: \"3px 0\",\n        border: \"1px solid #ccc\",\n        borderBottomLeftRadius: \"10px\",\n        borderBottomRightRadius: \"10px\",\n        borderTopRightRadius: \"10px\",\n        borderTopLeftRadius: \"10px\",\n        paddingleft: \"10px\"\n      };\n      var msg;\n\n      if (this.state.checked) {\n        msg = \"checked\";\n      } else {\n        msg = \"unchecked\";\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(CustomTabs, {\n        headerColor: \"info\",\n        tabs: [{\n          tabName: \"Create Exam\",\n          tabIcon: BugReport,\n          tabContent: React.createElement(\"form\", {\n            action: \"create.php\",\n            onSubmit: this.handleSubmit,\n            style: {\n              alignContent: \"Center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }, React.createElement(CardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, \"Form to add an Exam\")), React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, React.createElement(InputForm, {\n            inputType: \"text\",\n            inputKey: \"level\",\n            inputLabel: \"Level \",\n            updateInput: this.updateInput,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }), React.createElement(InputForm, {\n            inputType: \"text\",\n            inputKey: \"subject\",\n            inputLabel: \"Subject  \",\n            updateInput: this.updateInput,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            style: {\n              display: 'flex',\n              width: '100%',\n              alignContent: \"Center\",\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }, React.createElement(InputLabel, {\n            style: {\n              color: \"#000\",\n              width: \"300px\",\n              alignContent: \"Center\",\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }, \" \", \"     \", \"Semester     \", \"   \", \"  \"), React.createElement(\"select\", {\n            name: \"sel_s\",\n            required: true,\n            style: styleInput,\n            onChange: this.updateInput\n            /*updateInput={this.updateInput} */\n            ,\n            value: this.state.value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }), React.createElement(\"option\", {\n            name: \"sel_s\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          }, \"1st_Semester\"), React.createElement(\"option\", {\n            name: \"sel_s\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, \"2nd_Semester\"))), React.createElement(InputForm, {\n            inputType: \"number\",\n            inputKey: \"max\",\n            inputLabel: \"Max_Limit \",\n            updateInput: this.updateInput,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }), React.createElement(InputForm, {\n            inputType: \"number\",\n            inputKey: \"min\",\n            inputLabel: \"Min_Limit  \",\n            updateInput: this.updateInput,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            style: {\n              display: 'flex',\n              width: '100%',\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          }, React.createElement(InputLabel, {\n            style: {\n              color: \"#000\",\n              alignContent: \"Center\",\n              width: \"100%\",\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          }, \" Type of Exam \"), React.createElement(\"select\", {\n            name: \"sel_t\",\n            required: true,\n            style: {\n              border: \"1px solid #ccc\",\n              borderBottomLeftRadius: \"10px\",\n              borderBottomRightRadius: \"10px\",\n              borderTopRightRadius: \"10px\",\n              borderTopLeftRadius: \"10px\",\n              alignContent: \"Center\",\n              height: \"20px\",\n              margin: \"3px 0\",\n              width: \"90%\",\n              textAlign: \"center\"\n            },\n            onChange: this.updateInput\n            /*updateInput={this.updateInput}*/\n            ,\n            value: this.state.value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }), React.createElement(\"option\", {\n            name: \"sel_t\",\n            value: \"Daily_Exam\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          }, \"Daily_Exam\"), React.createElement(\"option\", {\n            name: \"sel_t\",\n            value: \"Mid_Exam\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          }, \"Mid_Exam\"), React.createElement(\"option\", {\n            name: \"sel_t\",\n            value: \"Final_Exam\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }, \"Final_Exam\"))), React.createElement(InputForm, {\n            inputType: \"date\",\n            inputKey: \"date\",\n            inputLabel: \"Date_Of_Exam  \",\n            updateInput: this.updateInput,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          }), React.createElement(FormControlLabel, {\n            control: React.createElement(Checkbox, {\n              checked: this.state.checked,\n              onChange: this.handleChange('checked'),\n              value: \"checked\",\n              name: \"check\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 207\n              },\n              __self: this\n            }),\n            label: \"Secondary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217\n            },\n            __self: this\n          }, \"this box is \", msg, \".\")), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          }, React.createElement(Button, {\n            color: \"info\",\n            name: \"create\",\n            type: \"submit\",\n            value: \"create\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221\n            },\n            __self: this\n          }, \"Create \")))\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(CustomTabs, {\n        headerColor: \"info\",\n        tabs: [{\n          tabName: \"Create_An_Exam\",\n          tabIcon: BugReport,\n          tabContent: React.createElement(GridContainer, {\n            justify: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248\n            },\n            __self: this\n          }, React.createElement(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 8,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 249\n            },\n            __self: this\n          }, React.createElement(CardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250\n            },\n            __self: this\n          }), React.createElement(CardBody, {\n            justify: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251\n            },\n            __self: this\n          }, React.createElement(Point, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 254\n            },\n            __self: this\n          }))))\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Grades;\n}(React.Component);\n\nexport { Grades as default };","map":{"version":3,"sources":["C:\\xampp1\\htdocs\\test_project-master (4)\\test_project-master\\src\\views\\Grades\\Grades.jsx"],"names":["BugReport","InputLabel","Card","React","Component","GridItem","CardBody","CardFooter","CardHeader","GridContainer","Button","CustomTabs","TableEditablePage","InputForm","Point","Checkbox","FormControlLabel","App","getData","url","fetch","method","mode","cache","credentials","headers","redirect","referrer","then","response","json","postData","data","body","JSON","stringify","text","Grades","props","handleCheckboxChange","event","setState","checked","target","handleChange","name","console","log","state","updateInput","value","handleSubmit","e","preventDefault","catch","error","reset","bind","styleInput","width","alignContent","height","margin","border","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","borderTopLeftRadius","paddingleft","msg","tabName","tabIcon","tabContent","display","textAlign","color"],"mappings":"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","sourcesContent":["import BugReport from \"@material-ui/icons/BugReport\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport Card from \"components/Card/Card.jsx\";\n\nimport React, { Component } from 'react';\n\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.jsx\";\nimport {TableEditablePage} from \"views/Grades/editable_table.jsx\";\nimport InputForm from './InputForm';\nimport Point from 'views/Grades/edittable';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport App from 'views/Grades/table/index';\n\n\nfunction getData(url) {\n    return fetch(url, {\n        method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n            \"Content-Type\": \"application/json\",\n\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        redirect: \"follow\", // manual, *follow, error\n        referrer: \"no-referrer\", // no-referrer, *client\n        //body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    })\n        .then(response => response.json()); // parses response to JSON\n}\nfunction postData(url, data) {\n    // Default options are marked with *\n    return fetch(url, {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        redirect: \"follow\", // manual, *follow, error\n        referrer: \"no-referrer\", // no-referrer, *client\n        body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    })\n        .then(response => response.text()); // parses response to JSON\n}\n\nexport default class Grades extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            checked: false ,\n        }\n        // this.getlevel=this.getlevel.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.updateInput = this.updateInput.bind(this);\n    }\n    handleCheckboxChange = event => {\n        this.setState({ checked: event.target.checked })\n      }\n      handleChange = name => event => {\n          console.log(name);\n\n        this.setState({ [name]: event.target.checked });\n        this.setState({ checked:!this.state.checked});\n\n      };\n\n    updateInput = (event) => {\n        let state = {};\n        state[event.target.name] = event.target.value;\n        this.setState(state);\n    }\n    /*  getlevel=(e)=>{\n          e.preventDefault();\n          getData(`http://localhost/xx-master/src/views/Grades/get.php`, this.state)\n              .then(data => console.log(JSON.stringify(data)))\n              .catch(error => console.error(error));\n      }*/\n\n    /*\n        componentDidMount() {\n            postData(`http://localhost/test_project-master (4)/test_project-master/src/views/Grades/create.php`, this.state)\n                .then(data => console.log(JSON.stringify(data)))\n                .catch(error => console.error(error));\n        }\n    */\n    handleSubmit = (e) => {\n        e.preventDefault();\n        postData(`http://localhost/test_project-master (4)/test_project-master/src/views/Grades/create.php`, this.state)\n            .then(data => console.log(JSON.stringify(data)))\n            .catch(error => console.error(error));\n\n        e.target.reset();\n    }\n    /*  getsubject=(e)=>{\n          e.preventDefault();\n          getData(`http://localhost/xx-master/src/views/Grades/gets.php`, this.state)\n              .then(data => console.log(JSON.stringify(data)))\n              .catch(error => console.error(error));\n      }*/\n\n\n    // _handleChange(event) {\n    //   let state = {};\n    //   this.setState({ value: event.target.value }) // I tried before target.value, or nativeEvent.value\n    // }\n\n    render() {\n        const styleInput = {\n            width: \"50%\",\n            alignContent: \"Center\",\n            height: \"20px\",\n            margin: \"3px 0\",\n            border: \"1px solid #ccc\",\n            borderBottomLeftRadius: \"10px\",\n            borderBottomRightRadius: \"10px\",\n            borderTopRightRadius: \"10px\",\n            borderTopLeftRadius: \"10px\",\n            paddingleft: \"10px\",\n\n        };\n\n        var msg;\n        if (this.state.checked) {\n          msg = \"checked\";\n        } else {\n          msg = \"unchecked\";\n        }\n\n        return (\n            <div>\n                <GridContainer justify=\"center\">\n                    <GridItem xs={12} sm={12} md={8}>\n                        <CustomTabs\n                            headerColor=\"info\"\n                            tabs={[\n                                {\n                                    tabName: \"Create Exam\",\n                                    tabIcon: BugReport,\n                                    tabContent: (\n                                        <form action=\"create.php\" onSubmit={this.handleSubmit} style={{ alignContent: \"Center\" }}  >\n                                            {/* <GridContainer justify=\"center\">   \n                         \n                             \n                        <GridItem xs={12} sm={12} md={10}>*/}\n                                            <CardHeader><h3>Form to add an Exam</h3></CardHeader>\n                                            <CardBody>\n\n\n                                                <InputForm inputType=\"text\" inputKey=\"level\" inputLabel=\"Level \" updateInput={this.updateInput} />\n                                                <InputForm inputType=\"text\" inputKey=\"subject\" inputLabel=\"Subject  \" updateInput={this.updateInput} />\n                                                <div style={{ display: 'flex', width: '100%', alignContent: \"Center\", textAlign: \"center\" }}>\n\n                                                    <InputLabel style={{ color: \"#000\", width: \"300px\", alignContent: \"Center\", textAlign: \"center\" }}> {\"     \"}Semester     {\"   \"}  </InputLabel>\n\n                                                    <select name=\"sel_s\" required style={styleInput} onChange={this.updateInput}   /*updateInput={this.updateInput} */ value={this.state.value}>\n                                                        <option></option>\n                                                        <option name=\"sel_s\">1st_Semester</option>\n                                                        <option name=\"sel_s\">2nd_Semester</option>\n                                                    </select>\n\n                                                </div>\n\n                                                <InputForm inputType=\"number\" inputKey=\"max\" inputLabel=\"Max_Limit \" updateInput={this.updateInput} />\n                                                <InputForm inputType=\"number\" inputKey=\"min\" inputLabel=\"Min_Limit  \" updateInput={this.updateInput} />\n\n                                                <div style={{ display: 'flex', width: '100%', textAlign: \"center\" }}>\n\n                                                    <InputLabel style={{ color: \"#000\", alignContent: \"Center\", width: \"100%\", textAlign: \"center\" }}> Type of Exam </InputLabel>\n                                                    <select name=\"sel_t\" required style={{\n                                                        border: \"1px solid #ccc\",\n                                                        borderBottomLeftRadius: \"10px\",\n                                                        borderBottomRightRadius: \"10px\",\n                                                        borderTopRightRadius: \"10px\",\n                                                        borderTopLeftRadius: \"10px\", alignContent: \"Center\", height: \"20px\",\n                                                        margin: \"3px 0\", width: \"90%\", textAlign: \"center\"\n                                                    }} onChange={this.updateInput} /*updateInput={this.updateInput}*/ value={this.state.value}>\n                                                        <option></option>\n                                                        <option name=\"sel_t\" value=\"Daily_Exam\">Daily_Exam</option>\n                                                        <option name=\"sel_t\" value=\"Mid_Exam\">Mid_Exam</option>\n                                                        <option name=\"sel_t\" value=\"Final_Exam\">Final_Exam</option>\n                                                    </select>\n\n                                                </div>\n\n\n                                                <InputForm inputType=\"date\" inputKey=\"date\" inputLabel=\"Date_Of_Exam  \" updateInput={this.updateInput} />\n                           \n\n\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checked}\n              onChange={this.handleChange('checked')}\n              value=\"checked\"\n              name=\"check\"\n\n            />\n          }\n          label=\"Secondary\"\n        />\n         <p>this box is {msg}.</p>\n\n                                            </CardBody>\n                                            <CardFooter>\n                                                <Button color=\"info\" name=\"create\" type=\"submit\" value=\"create\">Create </Button>\n                                            </CardFooter>\n                                            {/* </GridItem>\n                              \n                        </GridContainer>  */}\n\n                                        </form>\n\n                                    ),\n                                }\n                            ]}\n\n                        >\n\n                        </CustomTabs>\n                    </GridItem>\n                </GridContainer>\n                <div >\n                <GridContainer justify=\"center\">\n                    <GridItem xs={12} sm={12} md={8}>\n                        <CustomTabs\n                            headerColor=\"info\"\n                            tabs={[\n                                {\n                                    tabName: \"Create_An_Exam\",\n                                    tabIcon: BugReport,\n                                    tabContent: (\n                                        <GridContainer justify=\"center\">\n                                            <GridItem xs={12} sm={12} md={8} >\n                                                <CardHeader></CardHeader>\n                                                <CardBody justify=\"center\">\n                                                  {/*}  <App />\n                                                    <TableEditablePage/>*/}\n                                                    <Point />\n                                                </CardBody>\n\n                                            </GridItem>\n                                        </GridContainer>\n\n                                    ),\n                                }\n                            ]}\n\n                        >\n\n                        </CustomTabs>\n                    </GridItem>\n                </GridContainer>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}