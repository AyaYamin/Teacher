{"ast":null,"code":"import _defineProperty from \"C:\\\\xampp\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\src\\\\views\\\\UserProfile\\\\form.tsx\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from \"@material-ui/core/Button\";\nimport React from 'react';\nimport { FormWithConstraints, FieldFeedbacks, Async, FieldFeedback } from 'react-form-with-constraints';\nimport 'views/UserProfile/style.css';\n\nfunction postData(url, data) {\n  // Default options are marked with *\n  return fetch(url, {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, cors, *same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      // \"Content-Type\": \"application/json\",\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrer: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n  }).then(function (response) {\n    return response.text();\n  }); // parses response to JSON\n}\n\nvar sleep = function sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}; // See https://en.wikipedia.org/wiki/List_of_the_most_common_passwords\n\n\nvar isACommonPassword =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(password) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('isACommonPassword');\n            _context.next = 3;\n            return sleep(1000);\n\n          case 3:\n            return _context.abrupt(\"return\", ['123456', 'password', '12345678', 'qwerty', '12345', '123456789', 'letmein', '1234567', 'football', 'iloveyou', 'admin', 'welcome', 'monkey', 'login', 'abc123'].includes(password.toLowerCase()));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function isACommonPassword(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.form = null;\n    _this.password = null;\n    _this.state = {\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      signUpButtonDisabled: false\n    };\n\n    _this.handleChange =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var target, fields, fieldIsValid;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                target = e.target; // FIXME See Computed property key names should not be widened https://github.com/Microsoft/TypeScript/issues/13948\n                // @ts-ignore\n\n                _this.setState(_defineProperty({}, target.name, target.value)); // Validates only the given field and returns the related FieldValidation structures\n\n\n                _context2.next = 4;\n                return _this.form.validateFields(target);\n\n              case 4:\n                fields = _context2.sent;\n                fieldIsValid = fields.every(function (fieldFeedbacksValidation) {\n                  return fieldFeedbacksValidation.isValid();\n                });\n                if (fieldIsValid) console.log(\"Field '\".concat(target.name, \"' is valid\"));else console.log(\"Field '\".concat(target.name, \"' is invalid\"));\n                if (_this.form.isValid()) console.log('The form is valid');else console.log('The form is invalid');\n\n                _this.setState({\n                  signUpButtonDisabled: !_this.form.isValid()\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handlePasswordChange =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var target, fields, fieldsAreValid;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                target = e.target; // FIXME See Computed property key names should not be widened https://github.com/Microsoft/TypeScript/issues/13948\n                // @ts-ignore\n\n                _this.setState(_defineProperty({}, target.name, target.value));\n\n                _context3.next = 4;\n                return _this.form.validateFields(target, 'passwordConfirm');\n\n              case 4:\n                fields = _context3.sent;\n                fieldsAreValid = fields.every(function (field) {\n                  return field.isValid();\n                });\n                if (fieldsAreValid) console.log(\"Fields '\".concat(target.name, \"' and 'passwordConfirm' are valid\"));else console.log(\"Fields '\".concat(target.name, \"' and/or 'passwordConfirm' are invalid\"));\n                if (_this.form.isValid()) console.log('The form is valid');else console.log('The form is invalid');\n\n                _this.setState({\n                  signUpButtonDisabled: !_this.form.isValid()\n                });\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.resetPass = function (event) {\n      event.preventDefault();\n      console.log(_this.state);\n      postData(\"http://localhost/test_project-master (4)/test_project-master/src/views/UserProfile/Edit1.php\", _this.state).then(function (data) {\n        return console.log(JSON.stringify(data));\n      }).catch(function (error) {\n        return console.error(error);\n      }); //  alert(`Updated Successfully ^_^`)\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Updated Successfuly\"), \" :\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \" \"));\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(event) {\n        var fields, formIsValid;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                event.preventDefault(); // Validates the non-dirty fields and returns the related FieldValidation structures\n\n                _context4.next = 3;\n                return _this.form.validateForm();\n\n              case 3:\n                fields = _context4.sent;\n                // or simply use this.form.isValid()\n                formIsValid = fields.every(function (field) {\n                  return field.isValid();\n                });\n                if (formIsValid) console.log('The form is valid');else console.log('The form is invalid');\n\n                _this.setState({\n                  signUpButtonDisabled: !formIsValid\n                });\n\n                if (formIsValid) {\n                  alert(\"Valid form\\n\\nthis.state =\\n\".concat(JSON.stringify(_this.state, null, 2)));\n                }\n\n                postData(\"http://localhost/test_project-master (4)/test_project-master/src/views/UserProfile/Edit1.php\", _this.state).then(function (data) {\n                  return console.log(JSON.stringify(data));\n                }).catch(function (error) {\n                  return console.error(error);\n                }); // alert(`Updated Successfully ^_^`)\n\n                _this.myFormRef.reset(); // event.target.reset();\n\n\n                return _context4.abrupt(\"return\", React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 165\n                  },\n                  __self: this\n                }, React.createElement(\"h4\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 166\n                  },\n                  __self: this\n                }, \"Updated Successfuly\")));\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var styleInput = {\n        width: \"150%\",\n        alignContent: \"Center\",\n        height: \"20px\",\n        margin: \"3px 0\",\n        border: \"1px solid #000\",\n        borderBottomLeftRadius: \"10px\",\n        borderBottomRightRadius: \"10px\",\n        borderTopRightRadius: \"10px\",\n        borderTopLeftRadius: \"10px\"\n      };\n      return React.createElement(FormWithConstraints, {\n        action: \"Edit1.php\",\n        ref: function ref(formWithConstraints) {\n          return _this2.form = formWithConstraints;\n        },\n        style: {\n          alignContent: \"Center\"\n        },\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        style: {\n          alignContent: \"Center\"\n        },\n        id: \"myForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          alignContent: \"Center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"email\",\n        style: {\n          color: \"#000\",\n          alignContent: \"Center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"ID\")), React.createElement(\"input\", {\n        type: \"number\",\n        name: \"id\",\n        id: \"id\",\n        style: styleInput,\n        required: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(InputLabel, {\n        htmlFor: \"email\",\n        style: {\n          color: \"#000\",\n          alignContent: \"Center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Current Password\")), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"email\",\n        id: \"email\",\n        style: styleInput,\n        value: this.state.email,\n        onChange: this.handleChange,\n        required: true,\n        minLength: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(FieldFeedbacks, {\n        for: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(FieldFeedback, {\n        when: \"tooShort\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Too short\")), React.createElement(FieldFeedback, {\n        when: \"*\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(FieldFeedback, {\n        when: \"valid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Looks good!\")))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"password\",\n        style: {\n          color: \"#000\",\n          alignContent: \"Center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"NEW Password\")), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        style: styleInput,\n        ref: function ref(password) {\n          return _this2.password = password;\n        },\n        value: this.state.password,\n        onChange: this.handlePasswordChange,\n        required: true,\n        pattern: \".{5,}\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(FieldFeedbacks, {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(FieldFeedback, {\n        when: \"valueMissing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(FieldFeedback, {\n        when: \"patternMismatch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Should be at least 5 characters long\")), React.createElement(FieldFeedback, {\n        when: function when(value) {\n          return !/\\d/.test(value);\n        },\n        warning: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Should contain numbers\"), \" \"), React.createElement(FieldFeedback, {\n        when: function when(value) {\n          return !/[a-z]/.test(value);\n        },\n        warning: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Should contain small letters\")), React.createElement(FieldFeedback, {\n        when: function when(value) {\n          return !/[A-Z]/.test(value);\n        },\n        warning: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Should contain capital letters\")), React.createElement(FieldFeedback, {\n        when: function when(value) {\n          return !/\\W/.test(value);\n        },\n        warning: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Should contain special characters\")), React.createElement(Async, {\n        promise: isACommonPassword,\n        pending: React.createElement(\"span\", {\n          style: {\n            display: 'block'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, \"...\"),\n        then: function then(commonPassword) {\n          return commonPassword ? React.createElement(FieldFeedback, {\n            warning: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222\n            },\n            __self: this\n          }, \"This password is very common\")) : null;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(FieldFeedback, {\n        when: \"valid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Looks good!\")))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"password-confirm\",\n        style: {\n          color: \"#000\",\n          alignContent: \"Center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Confirm Password\")), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"passwordConfirm\",\n        id: \"password-confirm\",\n        style: styleInput,\n        value: this.state.passwordConfirm,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(FieldFeedbacks, {\n        for: \"passwordConfirm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(FieldFeedback, {\n        when: function when(value) {\n          return value !== _this2.password.value;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Not the same password\")))), React.createElement(Button, {\n        disabled: this.state.signUpButtonDisabled,\n        style: {\n          color: \"#000548\",\n          background: \"#2196f3\"\n        },\n        name: \"UpdateProfile\",\n        type: \"submit\",\n        value: \"UpdateProfile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Update \")));\n    }\n  }]);\n\n  return Form;\n}(React.Component); //ReactDOM.render(<Form />, document.getElementById('app'));\n\n\nexport { Form as default };","map":{"version":3,"sources":["C:\\xampp\\htdocs\\test_project-master (4)\\test_project-master\\src\\views\\UserProfile\\form.tsx"],"names":["InputLabel","Button","React","FormWithConstraints","FieldFeedbacks","Async","FieldFeedback","postData","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","then","response","text","sleep","ms","Promise","resolve","setTimeout","isACommonPassword","password","console","log","includes","toLowerCase","Form","form","state","email","passwordConfirm","signUpButtonDisabled","handleChange","e","target","setState","name","value","validateFields","fields","fieldIsValid","every","fieldFeedbacksValidation","isValid","handlePasswordChange","fieldsAreValid","field","resetPass","event","preventDefault","catch","error","handleSubmit","validateForm","formIsValid","alert","myFormRef","reset","styleInput","width","alignContent","height","margin","border","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","borderTopLeftRadius","formWithConstraints","color","test","display","commonPassword","background","Component"],"mappings":"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","sourcesContent":["\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from \"@material-ui/core/Button\";\n\nimport React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport { FormWithConstraints, FieldFeedbacks, Async, FieldFeedback } from 'react-form-with-constraints';\n\nimport 'views/UserProfile/style.css';\n\nimport { DisplayFields } from 'react-form-with-constraints-tools';\nfunction postData(url, data) {\n    // Default options are marked with *\n    return fetch(url, {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n            // \"Content-Type\": \"application/json\",\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        redirect: \"follow\", // manual, *follow, error\n        referrer: \"no-referrer\", // no-referrer, *client\n        body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    })\n        .then(response => response.text()); // parses response to JSON\n}\n\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\n// See https://en.wikipedia.org/wiki/List_of_the_most_common_passwords\nconst isACommonPassword = async (password: string) => {\n    console.log('isACommonPassword');\n    await sleep(1000);\n    return [\n        '123456',\n        'password',\n        '12345678',\n        'qwerty',\n        '12345',\n        '123456789',\n        'letmein',\n        '1234567',\n        'football',\n        'iloveyou',\n        'admin',\n        'welcome',\n        'monkey',\n        'login',\n        'abc123'\n    ].includes(password.toLowerCase());\n};\n\ninterface Props { }\n\ninterface State {\n    email: string;\n    password: string;\n    passwordConfirm: string;\n    signUpButtonDisabled: boolean;\n}\n\nexport default class Form extends React.Component<Props, State> {\n   \n    form: FormWithConstraints | null = null;\n    password: HTMLInputElement | null = null;\n\n    state: State = {\n        email: '',\n        password: '',\n        passwordConfirm: '',\n        signUpButtonDisabled: false,\n\n    };\n\n    handleChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n        const target = e.target;\n\n        // FIXME See Computed property key names should not be widened https://github.com/Microsoft/TypeScript/issues/13948\n        // @ts-ignore\n        this.setState({\n            [target.name as keyof State]: target.value\n        });\n\n        // Validates only the given field and returns the related FieldValidation structures\n        const fields = await this.form!.validateFields(target);\n\n        const fieldIsValid = fields.every(fieldFeedbacksValidation => fieldFeedbacksValidation.isValid());\n        if (fieldIsValid) console.log(`Field '${target.name}' is valid`);\n        else console.log(`Field '${target.name}' is invalid`);\n\n        if (this.form!.isValid()) console.log('The form is valid');\n        else console.log('The form is invalid');\n\n        this.setState({ signUpButtonDisabled: !this.form!.isValid() });\n    }\n\n    handlePasswordChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n        const target = e.target;\n\n        // FIXME See Computed property key names should not be widened https://github.com/Microsoft/TypeScript/issues/13948\n        // @ts-ignore\n        this.setState({\n            [target.name as keyof State]: target.value\n        });\n\n        const fields = await this.form!.validateFields(target, 'passwordConfirm');\n\n        const fieldsAreValid = fields.every(field => field.isValid());\n        if (fieldsAreValid) console.log(`Fields '${target.name}' and 'passwordConfirm' are valid`);\n        else console.log(`Fields '${target.name}' and/or 'passwordConfirm' are invalid`);\n\n        if (this.form!.isValid()) console.log('The form is valid');\n        else console.log('The form is invalid');\n\n        this.setState({ signUpButtonDisabled: !this.form!.isValid() });\n    }\n    resetPass = (event) => {\n        event.preventDefault();\n        console.log(this.state);\n        postData(`http://localhost/test_project-master (4)/test_project-master/src/views/UserProfile/Edit1.php`, this.state)\n            .then(data => console.log(JSON.stringify(data)))\n            .catch(error => console.error(error));\n        //  alert(`Updated Successfully ^_^`)\n\n\n        return (\n            <div>\n\n                <h4 color=\"primary\">Updated Successfuly</h4> :\n          <span> </span>\n            </div>\n\n        )\n    }\n    handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        \n        event.preventDefault();\n\n        // Validates the non-dirty fields and returns the related FieldValidation structures\n        const fields = await this.form!.validateForm();\n\n        // or simply use this.form.isValid()\n        const formIsValid = fields.every(field => field.isValid());\n\n        if (formIsValid) console.log('The form is valid');\n        else console.log('The form is invalid');\n\n        this.setState({ signUpButtonDisabled: !formIsValid });\n\n        if (formIsValid) {\n            alert(`Valid form\\n\\nthis.state =\\n${JSON.stringify(this.state, null, 2)}`);\n        }\n\n        postData(`http://localhost/test_project-master (4)/test_project-master/src/views/UserProfile/Edit1.php`, this.state)\n            .then(data => console.log(JSON.stringify(data)))\n            .catch(error => console.error(error));\n        // alert(`Updated Successfully ^_^`)\n        this.myFormRef.reset(); \n     // event.target.reset();\n        return (\n            <div>\n                <h4>Updated Successfuly</h4>\n            </div>\n        )\n    }\n\n    render() {\n        const styleInput = {\n            width: \"150%\",\n            alignContent: \"Center\",\n            height: \"20px\",\n            margin: \"3px 0\",\n            border: \"1px solid #000\",\n            borderBottomLeftRadius: \"10px\",\n            borderBottomRightRadius: \"10px\",\n            borderTopRightRadius: \"10px\",\n            borderTopLeftRadius: \"10px\",\n\n        };\n        return (\n            <FormWithConstraints action=\"Edit1.php\" ref={formWithConstraints => this.form = formWithConstraints}\n          style={{ alignContent: \"Center\" }} onSubmit={this.handleSubmit} noValidate>\n          <form  style={{ alignContent: \"Center\" }} id=\"myForm\">\n                <div style={{ alignContent: \"Center\" }}>\n\n                    <InputLabel htmlFor=\"email\" style={{ color: \"#000\", alignContent: \"Center\" }}><b>ID</b></InputLabel>\n                    <input type=\"number\" name=\"id\" id=\"id\" style={styleInput} required onChange={this.handleChange} />\n                    <br/>\n\n                    <InputLabel htmlFor=\"email\" style={{ color: \"#000\", alignContent: \"Center\" }}><b>Current Password</b></InputLabel>\n                    <input type=\"password\" name=\"email\" id=\"email\" style={styleInput}\n                        value={this.state.email} onChange={this.handleChange}\n                        required minLength={5} />\n                    <FieldFeedbacks for=\"email\">\n                        <FieldFeedback when=\"tooShort\"><b>Too short</b></FieldFeedback>\n                        <FieldFeedback when=\"*\" />\n                        <FieldFeedback when=\"valid\"><b>Looks good!</b></FieldFeedback>\n                    </FieldFeedbacks>\n                </div>\n\n                <div>\n                    <InputLabel htmlFor=\"password\" style={{ color: \"#000\", alignContent: \"Center\" }}><b>NEW Password</b></InputLabel>\n                    <input type=\"password\" name=\"password\" id=\"password\" style={styleInput}\n                        ref={password => this.password = password}\n                        value={this.state.password} onChange={this.handlePasswordChange}\n                        required pattern=\".{5,}\" />\n                    <FieldFeedbacks for=\"password\">\n                        <FieldFeedback when=\"valueMissing\" />\n                        <FieldFeedback when=\"patternMismatch\"><b>Should be at least 5 characters long</b></FieldFeedback>\n                        <FieldFeedback when={value => !/\\d/.test(value)} warning ><b>Should contain numbers</b> </FieldFeedback>\n                        <FieldFeedback when={value => !/[a-z]/.test(value)} warning><b>Should contain small letters</b></FieldFeedback>\n                        <FieldFeedback when={value => !/[A-Z]/.test(value)} warning><b>Should contain capital letters</b></FieldFeedback>\n                        <FieldFeedback when={value => !/\\W/.test(value)} warning><b>Should contain special characters</b></FieldFeedback>\n                        <Async\n                            promise={isACommonPassword}\n                            pending={<span style={{ display: 'block' }}>...</span>}\n                            then={commonPassword => commonPassword ?\n                                <FieldFeedback warning><b>This password is very common</b></FieldFeedback> : null\n                            }\n                        />\n                        <FieldFeedback when=\"valid\"><b>Looks good!</b></FieldFeedback>\n                    </FieldFeedbacks>\n                </div>\n\n                <div>\n                    <InputLabel htmlFor=\"password-confirm\" style={{ color: \"#000\", alignContent: \"Center\" }}><b>Confirm Password</b></InputLabel>\n                    <input type=\"password\" name=\"passwordConfirm\" id=\"password-confirm\" style={styleInput}\n                        value={this.state.passwordConfirm} onChange={this.handleChange} />\n                    <FieldFeedbacks for=\"passwordConfirm\">\n                        <FieldFeedback when={value => value !== this.password!.value}><b>Not the same password</b></FieldFeedback>\n                    </FieldFeedbacks>\n                </div>\n\n\n                <Button disabled={this.state.signUpButtonDisabled} style={{ color: \"#000548\", background: \"#2196f3\" }} name=\"UpdateProfile\" type=\"submit\" value=\"UpdateProfile\">Update </Button>\n\n                </form>\n            </FormWithConstraints>\n        );\n    }\n}\n\n//ReactDOM.render(<Form />, document.getElementById('app'));\n"]},"metadata":{},"sourceType":"module"}