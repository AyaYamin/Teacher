{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\src\\\\views\\\\Icons\\\\Icons.jsx\";\n\n/*import withStyles from \"@material-ui/core/styles/withStyles\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nimport React, { Component } from \"react\";\n\nimport Card from \"components/Card/Card.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\n\nimport iconsStyle from \"assets/jss/material-dashboard-react/views/iconsStyle.jsx\";\n\nimport Build from 'views/Icons/Table';\nimport Countstudent from \"views/Icons/countstudent\";\n\n\nfunction getData(url) {\n  return fetch(url, {\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\", // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\",\n\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrer: \"no-referrer\", // no-referrer, *client\n    //body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  })\n    .then(response => response.json()); // parses response to JSON\n}\n\n\n\n\nclass Icons extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n\n    this.getClasses = this.getClasses.bind(this);\n  }\n\n  getClasses = (e) => {\n    getData(`http://localhost/test_project-master (4)/test_project-master/src/views/Icons/getclass.php`)\n      .then(function (event) {\n        //  this.setState({\n        //     data: event//.data\n        // });\n      })\n\n    return (<div><Build /></div>);\n  }\n\n\n\n  render() {\n    const { classes } = this.props;\n    return (\n\n      <div style={{ alignContent: \"Center\" }}>\n        <GridContainer justify=\"center\">\n          <GridItem xs={12} sm={12} md={11} >\n            <form action=\"getclass.php\" onSubmit={this.handleSubmit} onChange={this.updateInput}>\n              <GridItem xs={12} sm={12} md={11}>\n                <Card>\n                  <CardHeader color=\"info\">\n                    <h4 className={classes.cardTitleWhite}>Available Classes</h4>\n                    <p style={{ color: \"#ffa000\" }} className={classes.cardCategoryWhite}>_</p>\n                  </CardHeader>\n                  <CardBody>\n\n\n                    <GridContainer justify=\"center\">\n                      <GridItem xs={12} sm={12} md={11} >\n                        <Card >\n                          <center>{this.getClasses()}</center>\n                        </Card>\n                      </GridItem>\n                    </GridContainer>\n\n                  </CardBody>\n                </Card>\n              </GridItem>\n            </form>\n          </GridItem>\n        </GridContainer>\n      </div>\n    );\n  }\n}\n\n\n\nexport default withStyles(iconsStyle)(Icons);\n\n*/\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport React, { Component } from \"react\";\nimport Card from \"components/Card/Card.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport iconsStyle from \"assets/jss/material-dashboard-react/views/iconsStyle.jsx\";\nimport Build from 'views/Icons/Table';\n\nfunction getData(url) {\n  return fetch(url, {\n    method: \"GET\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, cors, *same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: _defineProperty({\n      \"Content-Type\": \"application/json\"\n    }, \"Content-Type\", \"application/x-www-form-urlencoded\"),\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrer: \"no-referrer\" // no-referrer, *client\n    //body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n\n  }).then(function (response) {\n    return response.json();\n  }); // parses response to JSON\n}\n\nvar Icons =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Icons, _React$Component);\n\n  function Icons(props) {\n    var _this;\n\n    _classCallCheck(this, Icons);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Icons).call(this, props));\n\n    _this.getClasses = function (e) {\n      getData(\"http://localhost/test_project-master (4)/test_project-master/src/views/Icons/getclass.php\").then(function (event) {//  this.setState({\n        //     data: event//.data\n        // });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Build, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }));\n    };\n\n    _this.state = {\n      data: []\n    };\n    _this.getClasses = _this.getClasses.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Icons, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        plain: true,\n        color: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitleWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \" ALL My Available Classes \")), React.createElement(\"p\", {\n        className: classes.cardCategoryWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, this.getClasses()))))))));\n    }\n  }]);\n\n  return Icons;\n}(React.Component);\n\nexport default withStyles(iconsStyle)(Icons);","map":{"version":3,"sources":["C:\\xampp1\\htdocs\\test_project-master (4)\\test_project-master\\src\\views\\Icons\\Icons.jsx"],"names":["withStyles","Hidden","React","Component","Card","GridItem","CardBody","CardHeader","GridContainer","iconsStyle","Build","getData","url","fetch","method","mode","cache","credentials","headers","redirect","referrer","then","response","json","Icons","props","getClasses","e","event","state","data","bind","classes","cardTitleWhite","cardCategoryWhite","width","textAlign"],"mappings":"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","sourcesContent":["/*import withStyles from \"@material-ui/core/styles/withStyles\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nimport React, { Component } from \"react\";\n\nimport Card from \"components/Card/Card.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\n\nimport iconsStyle from \"assets/jss/material-dashboard-react/views/iconsStyle.jsx\";\n\nimport Build from 'views/Icons/Table';\nimport Countstudent from \"views/Icons/countstudent\";\n\n\nfunction getData(url) {\n  return fetch(url, {\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\", // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\",\n\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrer: \"no-referrer\", // no-referrer, *client\n    //body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  })\n    .then(response => response.json()); // parses response to JSON\n}\n\n\n\n\nclass Icons extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n\n    this.getClasses = this.getClasses.bind(this);\n  }\n\n  getClasses = (e) => {\n    getData(`http://localhost/test_project-master (4)/test_project-master/src/views/Icons/getclass.php`)\n      .then(function (event) {\n        //  this.setState({\n        //     data: event//.data\n        // });\n      })\n\n    return (<div><Build /></div>);\n  }\n\n\n\n  render() {\n    const { classes } = this.props;\n    return (\n\n      <div style={{ alignContent: \"Center\" }}>\n        <GridContainer justify=\"center\">\n          <GridItem xs={12} sm={12} md={11} >\n            <form action=\"getclass.php\" onSubmit={this.handleSubmit} onChange={this.updateInput}>\n              <GridItem xs={12} sm={12} md={11}>\n                <Card>\n                  <CardHeader color=\"info\">\n                    <h4 className={classes.cardTitleWhite}>Available Classes</h4>\n                    <p style={{ color: \"#ffa000\" }} className={classes.cardCategoryWhite}>_</p>\n                  </CardHeader>\n                  <CardBody>\n\n\n                    <GridContainer justify=\"center\">\n                      <GridItem xs={12} sm={12} md={11} >\n                        <Card >\n                          <center>{this.getClasses()}</center>\n                        </Card>\n                      </GridItem>\n                    </GridContainer>\n\n                  </CardBody>\n                </Card>\n              </GridItem>\n            </form>\n          </GridItem>\n        </GridContainer>\n      </div>\n    );\n  }\n}\n\n\n\nexport default withStyles(iconsStyle)(Icons);\n\n*/\n\n\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nimport React, { Component } from \"react\";\n\nimport Card from \"components/Card/Card.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\n\nimport iconsStyle from \"assets/jss/material-dashboard-react/views/iconsStyle.jsx\";\n\nimport Build from 'views/Icons/Table';\n\n\n\nfunction getData(url) {\n  return fetch(url, {\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\", // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\",\n\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrer: \"no-referrer\", // no-referrer, *client\n    //body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  })\n    .then(response => response.json()); // parses response to JSON\n}\n\n\n\n\nclass Icons extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n\n    this.getClasses = this.getClasses.bind(this);\n  }\n\n  getClasses = (e) => {\n    getData(`http://localhost/test_project-master (4)/test_project-master/src/views/Icons/getclass.php`)\n      .then(function (event) {\n        //  this.setState({\n        //     data: event//.data\n        // });\n      })\n\n    return (<div><Build /></div>);\n  }\n\n\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <GridContainer justify=\"center\">\n        <GridItem xs={12} sm={12} md={11}>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={11}>\n              <Card>\n\n                <CardHeader plain color=\"info\">\n                  <center><h4 className={classes.cardTitleWhite} > ALL My Available Classes </h4></center>\n                  <p className={classes.cardCategoryWhite}></p>\n                </CardHeader>\n                <CardBody>\n                  <div style={{ width: \"100%\", textAlign: \"center\" }} >\n\n                    <center>{this.getClasses()}</center>\n                  </div>\n                </CardBody>\n\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </GridItem>\n      </GridContainer>\n    );\n  }\n}\n\n\n\nexport default withStyles(iconsStyle)(Icons);\n\n\n"]},"metadata":{},"sourceType":"module"}