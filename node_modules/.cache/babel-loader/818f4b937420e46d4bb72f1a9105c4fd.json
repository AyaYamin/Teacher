{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\src\\\\views\\\\Maps\\\\tablee.jsx\";\nimport color from '@material-ui/core/colors/deepOrange';\nimport React, { Component } from 'react';\nimport Card from \"components/Card/Card.jsx\";\nimport Tasks from \"components/Tasks/Tasks.jsx\";\nimport Table from \"components/Table/Table.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Add from './add';\n\nfunction getData() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Default options are marked with *\n  return fetch(url, {\n    method: \"GET\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, cors, *same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // \"Content-Type\": \"application/x-www-form-urlencoded\",\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrer: \"no-referrer\" // no-referrer, *client\n    //body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n\n  }).then(function (response) {\n    return response.json();\n  }); // parses response to JSON\n}\n\nvar Build =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Build, _Component);\n\n  function Build(props) {\n    var _this;\n\n    _classCallCheck(this, Build);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Build).call(this, props));\n\n    _this.updateInput = function (event) {\n      var state = {};\n      state[event.target.name] = event.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.updateInput2 = function (event) {\n      // let state = {};\n      // state[event.target.name] = event.target.value;\n      // this.setState(state);\n      var x = document.getElementsByTagName('input'); //x.se\n    };\n\n    _this.handleSubmit9 = function (e) {\n      e.preventDefault();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Add, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    };\n\n    _this.handleSubmit5 = function (event) {\n      event.preventDefault(); //alert('Handle it on your own');\n\n      console.log(_this.state);\n      getData(\"http://localhost/xx-master/src/views/Maps/activity.php\", _this.state).then(function (data) {\n        return console.log(JSON.stringify(data));\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    };\n\n    _this.state = {\n      data: [],\n      value: ''\n    };\n    _this.updateInput = _this.updateInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit9 = _this.handleSubmit9.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.getData = this.getData.bind(this);\n\n    _this.handleSubmit5 = _this.handleSubmit5.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Build, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var th = this; //this.serverRequest = axios.get(this.props.source)\n\n      getData(\"http://localhost/xx-master/src/views/Maps/activity.php\").then(function (event) {\n        th.setState({\n          data: event //.data\n\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {//this.serverRequest.abort();\n    }\n  }, {\n    key: \"render\",\n\n    /* contents=(event)=>{\n         event.preventDefault();\n         //alert('Handle it on your own');\n         console.log(this.state);\n         <div className=\"Table\">\n                 <table style={{background:\"pink\",border:\" 1px solid black\"}} onChange={this.props.get}>\n                     <thead style={{border:\" 1px solid black\",background:\"gray\"}}>\n                     <tr>\n           \n                       </tr>\n                     </thead>\n                      <tbody>\n                     {\n                     this.state.data.map(item=>\n                     <tr key={item.id3}>\n                         <td>{item.fname}</td>\n                         <td>{item.mname}</td>\n                         <td>{item.lname}</td>\n                         <td>{item.id_st}</td>\n                         <td>{item.id}</td>\n                         <td>{item.p_id}</td>\n                        \n                         <td>{item.city}</td>\n                         <td>{item.phone}</td>\n                         <td>{item.address}</td>\n                         <td>{item.DateBirth}</td>\n                     </tr>\n                     )\n                     }\n                     </tbody>\n                  </table>\n             </div>\n      }*/\n    value: function render() {\n      var _this2 = this;\n\n      /*   const contents = this.state.data.map(item => {\n             //change the title and location key based on your API\n             return(<tr key={item.id}>\n              <tr>\n            \n                 </tr>\n             </tr>)\n         })*/\n      var styleInput = {\n        width: \"100%\",\n        alignContent: \"Center\",\n        height: \"30px\",\n        margin: \"3px 0\",\n        border: \"1px solid #ccc\",\n        borderBottomLeftRadius: \"10px\",\n        borderBottomRightRadius: \"10px\",\n        borderTopRightRadius: \"10px\",\n        borderTopLeftRadius: \"10px\",\n        alignItems: 'center'\n      };\n      return React.createElement(\"div\", {\n        className: \"Table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        style: {\n          background: \"white\",\n          border: \" 1px solid rose\"\n        },\n        onChange: this.props.get,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        style: {\n          border: \" 1px solid blue\",\n          background: \"blue\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, this.state.data.map(function (item, i) {\n        return React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          style: styleInput,\n          type: \"text\",\n          id: \"id\",\n          onChange: _this2.updateInput2,\n          value: item.Type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        })));\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Build;\n}(Component);\n\nexport default Build; // <div>\n//<h1>All Events</h1>\n//<table>\n//  <tbody>\n//     {contents}\n//   </tbody>\n//</table>\n//</div>","map":{"version":3,"sources":["C:\\xampp1\\htdocs\\test_project-master (4)\\test_project-master\\src\\views\\Maps\\tablee.jsx"],"names":["color","React","Component","Card","Tasks","Table","CardBody","GridItem","CardHeader","GridContainer","Button","Add","getData","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrer","then","response","json","Build","props","updateInput","event","state","target","name","value","setState","updateInput2","x","document","getElementsByTagName","handleSubmit9","e","preventDefault","handleSubmit5","console","log","JSON","stringify","catch","error","bind","th","styleInput","width","alignContent","height","margin","border","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","borderTopLeftRadius","alignItems","background","get","map","item","i","Type"],"mappings":"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","sourcesContent":["import color from '@material-ui/core/colors/deepOrange';\n\nimport React, { Component } from 'react';\n\nimport Card from \"components/Card/Card.jsx\";\nimport Tasks from \"components/Tasks/Tasks.jsx\";\nimport Table from \"components/Table/Table.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\n\nimport Add from './add';\nfunction getData(url = ``, data = {}) {\n    // Default options are marked with *\n    return fetch(url, {\n        method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n            \"Content-Type\": \"application/json\",\n\n            // \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        redirect: \"follow\", // manual, *follow, error\n        referrer: \"no-referrer\", // no-referrer, *client\n        //body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    })\n        .then(response => response.json()); // parses response to JSON\n}\n\n\n\n\nclass Build extends Component {\n\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            value:''\n        };\n        this.updateInput = this.updateInput.bind(this);\n        this. handleSubmit9=this. handleSubmit9.bind(this);\n\n        //this.getData = this.getData.bind(this);\n        this.handleSubmit5 = this.handleSubmit5.bind(this);\n    }\n\n\n\n    componentDidMount() {\n        var th = this;\n        //this.serverRequest = axios.get(this.props.source)\n        getData(`http://localhost/xx-master/src/views/Maps/activity.php`)\n            .then(function (event) {\n                th.setState({\n                    data: event//.data\n                });\n            })\n    }\n\n    componentWillUnmount() {\n        //this.serverRequest.abort();\n    }\n\n\n\n\n\n    updateInput = (event) => {\n        let state = {};\n        state[event.target.name] = event.target.value;\n        this.setState(state);\n    }\n\n    updateInput2 = (event) => {\n       // let state = {};\n       // state[event.target.name] = event.target.value;\n       // this.setState(state);\n\n       var x=document.getElementsByTagName('input')\n       //x.se\n\n    }\n\n    handleSubmit9=(e)=>{\n       e.preventDefault();\n       return(\n          <div>\n              { <Add/>}\n           </div>\n         )\n       \n   }\n\n   \n    handleSubmit5 = (event) => {\n        event.preventDefault();\n        //alert('Handle it on your own');\n        console.log(this.state);\n        getData(`http://localhost/xx-master/src/views/Maps/activity.php`, this.state)\n            .then(data => console.log(JSON.stringify(data)))\n            .catch(error => console.error(error));\n\n    }\n   /* contents=(event)=>{\n        event.preventDefault();\n        //alert('Handle it on your own');\n        console.log(this.state);\n        <div className=\"Table\">\n                <table style={{background:\"pink\",border:\" 1px solid black\"}} onChange={this.props.get}>\n                    <thead style={{border:\" 1px solid black\",background:\"gray\"}}>\n                    <tr>\n          \n\n\n                    </tr>\n                    </thead>\n\n                    <tbody>\n                    {\n                    this.state.data.map(item=>\n                    <tr key={item.id3}>\n                        <td>{item.fname}</td>\n                        <td>{item.mname}</td>\n                        <td>{item.lname}</td>\n                        <td>{item.id_st}</td>\n                        <td>{item.id}</td>\n                        <td>{item.p_id}</td>\n                       \n                        <td>{item.city}</td>\n                        <td>{item.phone}</td>\n                        <td>{item.address}</td>\n                        <td>{item.DateBirth}</td>\n                    </tr>\n                    )\n                    }\n                    </tbody>\n\n                </table>\n            </div>\n\n    }*/\n\n\n\n    render() {\n       \n     /*   const contents = this.state.data.map(item => {\n            //change the title and location key based on your API\n            return(<tr key={item.id}>\n\n            <tr>\n           \n                </tr>\n            </tr>)\n        })*/\n\n        const styleInput = {\n            width: \"100%\",\n            alignContent: \"Center\",\n            height: \"30px\",\n            margin: \"3px 0\",\n            border: \"1px solid #ccc\",\n            borderBottomLeftRadius: \"10px\",\n            borderBottomRightRadius: \"10px\",\n            borderTopRightRadius: \"10px\",\n            borderTopLeftRadius: \"10px\",\n            alignItems: 'center',\n            \n          };\n          \n        return (\n            \n            <div className=\"Table\">\n                <table style={{background:\"white\",border:\" 1px solid rose\"}} onChange={this.props.get}>\n                    <thead style={{border:\" 1px solid blue\",background:\"blue\"}}>\n                    <tr>\n                    \n\n\n                    </tr>\n                    </thead>\n\n                    <tbody>\n                    {\n                    this.state.data.map((item,i)=>\n                    <tr key={i}>\n                      \n                     {/* \n                       <td>\n                           <Button color=\"rose\" type=\"submit\"  >\n                                <a onClick={this.handleSubmit9}> {item.Type }</a>\n                            </Button>\n                        </td>\n                         */} \n\n                         <td>\n\n\n\n   \n <input style={styleInput}  type=\"text\" id=\"id\"  onChange={this.updateInput2}  value={item.Type}> \n \n  </input>\n          \n                           \n                            \n\n                        </td>\n\n\n\n                    </tr>\n                    )\n\n                     }\n                  <tr>\n                           {/*  <td>\n                                <Button color=\"info\" type=\"submit\"  >        \n                                       <a onClick={this.handleSubmit9}> Add_New_Activity </a>   \n                                </Button>\n                            </td> */}\n                  </tr>\n                  \n                    </tbody>\n\n                </table>\n            </div>\n            \n                   \n            \n        );\n    }\n}\n\n\n\n\n\nexport default Build\n\n// <div>\n//<h1>All Events</h1>\n//<table>\n  //  <tbody>\n   //     {contents}\n //   </tbody>\n    \n//</table>\n\n//</div>"]},"metadata":{},"sourceType":"module"}