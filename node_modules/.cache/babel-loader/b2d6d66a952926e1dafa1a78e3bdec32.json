{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\src\\\\views\\\\Maps\\\\e.jsx\";\nimport React, { Component } from 'react';\n\nfunction getData() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Default options are marked with *\n  return fetch(url, {\n    method: \"GET\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, cors, *same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" //\"Content-Type\": \"application/x-www-form-urlencoded\",\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrer: \"no-referrer\" // no-referrer, *client\n    //body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n\n  }).then(function (response) {\n    return response.json();\n  }); // parses response to JSON\n}\n/*export default class Products extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      value: ''\r\n    };\r\n    //this.handleSubmit=this. handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n\r\n\r\n  /*handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    getData(`http://localhost/test_project-master(4)/test_project-master/src/views/Maps/testt/data.php`, this.state)\r\n        .then(data => console.log(JSON.stringify(data)))\r\n        .catch(error => console.error(error));\r\n  \r\n  }*/\n\n/* handleRowDel(product) {\r\n   var index = this.state.products.indexOf(product);\r\n   this.state.products.splice(index, 1);\r\n   this.setState(this.state.products);\r\n };*/\n\n/* handleAddEvent(evt) {\r\n   var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString(36);\r\n   var product = {\r\n     id: id,\r\n     name: \"\",\r\n     price: \"\",\r\n     category: \"\",\r\n     qty: 0,\r\n     Att:0,\r\n   }\r\n   this.state.products.push(product);\r\n   this.setState(this.state.products);\r\n\n }*/\n\n/*\r\n\r\n  handleProductTable(evt) {\r\n    var item = {\r\n      id: evt.target.id,\r\n      name: evt.target.name,\r\n      value: evt.target.value\r\n    };\r\n\r\n    var products = this.state.products.slice();\r\n    var newProducts = products.map(function (product) {\r\n      for (var key in product) {\r\n        if (key == item.name && product.id == item.id) {\r\n          product[key] = item.value;\r\n        }\r\n      }\r\n      return product;\r\n    });\r\n    this.setState({ products: newProducts });\r\n  };\r\n\r\n\r\n\r\n\r\n  /*render() {\r\n\r\n    return (\r\n      <div>\r\n        <ProductTable onProductTableUpdate={this.handleProductTable.bind(this)} /*onRowAdd={this.handleAddEvent.bind(this)} onRowDel={this.handleRowDel.bind(this)} products={this.state.products} filterText={this.state.filterText}*/\n\n/*  </div>\r\n);\r\n}\r\n}*/\n\n\nvar ProductTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductTable, _React$Component);\n\n  function ProductTable(props) {\n    var _this;\n\n    _classCallCheck(this, ProductTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductTable).call(this, props));\n\n    _this.update = function (e) {\n      e.preventDefault();\n      var state = {};\n      state[e.target.name] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      getData(\"localhost/test_project-master%20(4)/test_project-master/src/views/Maps/data.php\", _this.state).then(function (data) {\n        return console.log(JSON.stringify(data));\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    };\n\n    _this.state = {\n      data: []\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProductTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var th = this; //this.serverRequest = axios.get(this.props.source)\n\n      getData(\"http://localhost/test_project-master (4)/test_project-master/src/views/Maps/data.php\").then(function (event) {\n        th.setState({\n          data: event //.data\n\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var onProductTableUpdate = this.props.onProductTableUpdate;\n      /* return (\r\n         <form action=\"data.php\" onChange={this.handleSubmit} >\r\n         <div>\r\n           <table className=\"table table-bordered\"  style={{ background: \"white\", border: \" 1px solid rose\" }} onChange={this.props.get}>\r\n             <thead  style={{ border: \" 1px solid blue\", background: \"blue\" }}>\r\n               <tr  style={{ border: \" 1px solid black\"}}>\r\n                 <th>Name</th>\r\n                 <th>ID</th>\r\n                 <th>Type</th>\r\n                 <th>Attendance</th>\r\n                 <th>Attitude</th>\r\n               </tr>\r\n             </thead>\r\n             <tbody>\r\n               {\r\n       this.state.data.map((item, i) =>\r\n                                       \r\n                 <tr className=\"eachRow\" key={i} >\r\n                 \r\n           <EditableCell onProductTableUpdate={this.props.onProductTableUpdate} \r\n              cellData={{\r\n                type:\"name\",\r\n                id:\"name\",\r\n                value:item.name,\r\n              }}\r\n           \r\n          />\r\n              <EditableCell onProductTableUpdate={this.props.onProductTableUpdate} \r\n           cellData={{\r\n             type:\"id\",\r\n             id:\"id\",\r\n             value:item.id,\r\n           }}\r\n            \r\n           />\r\n              <EditableCell onProductTableUpdate={this.props.onProductTableUpdate} \r\n               cellData={{\r\n                type:\"type\",\r\n                id:\"type\",\r\n                value:'',\r\n               }}\r\n           \r\n           />\r\n              <EditableCell onProductTableUpdate={this.props.onProductTableUpdate} \r\n              cellData={{\r\n                type:\"attendance\",\r\n                id:\"attendance\",\r\n                value:'',\r\n              }}\r\n           \r\n           />\r\n                <EditableCell onProductTableUpdate={this.props.onProductTableUpdate} \r\n                cellData={{\r\n                type:\"attitude\",\r\n                id:\"attitude\",\r\n                value:'',\r\n                }}\r\n              \r\n           />\r\n            </tr>\r\n             ) \r\n           }\r\n             </tbody>\r\n              </table>\r\n         </div>\r\n         </form>\r\n       );\r\n        }\r\n      }\r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      class EditableCell extends React.Component {\r\n      render() {\r\n       return (\r\n         <td>\r\n              <input type='text' name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onProductTableUpdate}/>\r\n         </td>\r\n       );\r\n        }\r\n      }*/\n\n      return React.createElement(\"div\", {\n        className: \"Table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        style: {\n          border: \" 1px solid rose\",\n          align: \"center\"\n        },\n        onChange: this.props.get,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        style: {\n          border: \" 1px solid rose\",\n          background: \"rose\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        style: {\n          border: \" 1px solid rose\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"id\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"type\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Attendance\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Attitude\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, this.state.data.map(function (item, i) {\n        return React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, item.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, item.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }]);\n\n  return ProductTable;\n}(React.Component);\n\nexport { ProductTable as default };","map":{"version":3,"sources":["C:\\xampp1\\htdocs\\test_project-master (4)\\test_project-master\\src\\views\\Maps\\e.jsx"],"names":["React","Component","getData","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrer","then","response","json","ProductTable","props","update","e","preventDefault","state","target","name","value","setState","handleSubmit","console","log","JSON","stringify","catch","error","bind","th","event","onProductTableUpdate","border","align","get","background","map","item","i","id"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n\r\n\r\nfunction getData(url = ``, data = {}) {\r\n  // Default options are marked with *\r\n  return fetch(url, {\r\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.\r\n    mode: \"cors\", // no-cors, cors, *same-origin\r\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"same-origin\", // include, *same-origin, omit\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      //\"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    redirect: \"follow\", // manual, *follow, error\r\n    referrer: \"no-referrer\", // no-referrer, *client\r\n  //body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n  })\r\n    .then(response => response.json()); // parses response to JSON\r\n}\r\n\r\n/*export default class Products extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      value: ''\r\n    };\r\n    //this.handleSubmit=this. handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n\r\n\r\n  /*handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    getData(`http://localhost/test_project-master(4)/test_project-master/src/views/Maps/testt/data.php`, this.state)\r\n        .then(data => console.log(JSON.stringify(data)))\r\n        .catch(error => console.error(error));\r\n  \r\n  }*/\r\n\r\n\r\n  /* handleRowDel(product) {\r\n     var index = this.state.products.indexOf(product);\r\n     this.state.products.splice(index, 1);\r\n     this.setState(this.state.products);\r\n   };*/\r\n\r\n  /* handleAddEvent(evt) {\r\n     var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString(36);\r\n     var product = {\r\n       id: id,\r\n       name: \"\",\r\n       price: \"\",\r\n       category: \"\",\r\n       qty: 0,\r\n       Att:0,\r\n     }\r\n     this.state.products.push(product);\r\n     this.setState(this.state.products);\r\n \r\n   }*/\r\n\r\n\r\n   \r\n   \r\n\r\n/*\r\n\r\n  handleProductTable(evt) {\r\n    var item = {\r\n      id: evt.target.id,\r\n      name: evt.target.name,\r\n      value: evt.target.value\r\n    };\r\n\r\n    var products = this.state.products.slice();\r\n    var newProducts = products.map(function (product) {\r\n      for (var key in product) {\r\n        if (key == item.name && product.id == item.id) {\r\n          product[key] = item.value;\r\n        }\r\n      }\r\n      return product;\r\n    });\r\n    this.setState({ products: newProducts });\r\n  };\r\n\r\n\r\n\r\n\r\n  /*render() {\r\n\r\n    return (\r\n      <div>\r\n        <ProductTable onProductTableUpdate={this.handleProductTable.bind(this)} /*onRowAdd={this.handleAddEvent.bind(this)} onRowDel={this.handleRowDel.bind(this)} products={this.state.products} filterText={this.state.filterText}*/ \r\n    /*  </div>\r\n    );\r\n\r\n  }\r\n\r\n}*/\r\n\r\n\r\nexport default class ProductTable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    var th = this;\r\n    //this.serverRequest = axios.get(this.props.source)\r\n    getData(`http://localhost/test_project-master (4)/test_project-master/src/views/Maps/data.php`)\r\n\r\n        .then(function (event) {\r\n            th.setState({\r\n                data: event//.data\r\n            });\r\n        })\r\n\r\n\r\n}\r\n\r\n  update=(e)=>{\r\n    e.preventDefault();\r\n     let state={};\r\n    state[e.target.name]=e.target.value;\r\n    this.setState(state);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    getData(`localhost/test_project-master%20(4)/test_project-master/src/views/Maps/data.php`, this.state)\r\n      .then(data => console.log(JSON.stringify(data)))\r\n      .catch(error => console.error(error));\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    var onProductTableUpdate = this.props.onProductTableUpdate;\r\n\r\n    /* return (\r\n       <form action=\"data.php\" onChange={this.handleSubmit} >\r\n       <div>\r\n         <table className=\"table table-bordered\"  style={{ background: \"white\", border: \" 1px solid rose\" }} onChange={this.props.get}>\r\n           <thead  style={{ border: \" 1px solid blue\", background: \"blue\" }}>\r\n             <tr  style={{ border: \" 1px solid black\"}}>\r\n               <th>Name</th>\r\n               <th>ID</th>\r\n               <th>Type</th>\r\n               <th>Attendance</th>\r\n               <th>Attitude</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n             {\r\n     this.state.data.map((item, i) =>\r\n                                     \r\n               <tr className=\"eachRow\" key={i} >\r\n               \r\n         <EditableCell onProductTableUpdate={this.props.onProductTableUpdate} \r\n            cellData={{\r\n              type:\"name\",\r\n              id:\"name\",\r\n              value:item.name,\r\n            }}\r\n         \r\n        />\r\n \r\n         <EditableCell onProductTableUpdate={this.props.onProductTableUpdate} \r\n         cellData={{\r\n           type:\"id\",\r\n           id:\"id\",\r\n           value:item.id,\r\n         }}\r\n          \r\n         />\r\n \r\n         <EditableCell onProductTableUpdate={this.props.onProductTableUpdate} \r\n             cellData={{\r\n              type:\"type\",\r\n              id:\"type\",\r\n              value:'',\r\n             }}\r\n         \r\n         />\r\n \r\n         <EditableCell onProductTableUpdate={this.props.onProductTableUpdate} \r\n            cellData={{\r\n              type:\"attendance\",\r\n              id:\"attendance\",\r\n              value:'',\r\n            }}\r\n         \r\n         />\r\n \r\n           <EditableCell onProductTableUpdate={this.props.onProductTableUpdate} \r\n              cellData={{\r\n              type:\"attitude\",\r\n              id:\"attitude\",\r\n              value:'',\r\n              }}\r\n            \r\n         />\r\n \r\n       </tr>\r\n  \r\n       ) \r\n         }\r\n           </tbody>\r\n \r\n         </table>\r\n       </div>\r\n       </form>\r\n     );\r\n \r\n   }\r\n \r\n }\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n class EditableCell extends React.Component {\r\n   render() {\r\n     return (\r\n       <td>\r\n \r\n         <input type='text' name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onProductTableUpdate}/>\r\n       </td>\r\n     );\r\n \r\n   }\r\n \r\n }*/\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"Table\">\r\n        <table style={{ border: \" 1px solid rose\", align: \"center\" }} onChange={this.props.get}>\r\n          <thead style={{ border: \" 1px solid rose\", background: \"rose\" }}>\r\n            <tr style={{ border: \" 1px solid rose\" }}>\r\n              <th>name</th>\r\n              <th>id</th>\r\n              <th>type</th>\r\n             \r\n              <th>Attendance</th>\r\n              <th>Attitude</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {\r\n              this.state.data.map((item, i) =>(\r\n\r\n                <tr key={i}>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.id}</td>\r\n                  <td>\r\n                \r\n                  \r\n                  </td>\r\n                  <td>\r\n                  {/* <input type=\"number\" name=\"attendance\" value=\"attendance\" onChange={this.update}/>  */}\r\n                  </td>\r\n                  <td>\r\n                 {/* <input type=\"number\" name=\"attitude\" value=\"attitude\" onChange={this.update}/>*/}\r\n                  </td>\r\n                  <td>\r\n                   \r\n                  </td>\r\n                </tr>\r\n\r\n\r\n              )\r\n\r\n              )\r\n            }\r\n\r\n          </tbody>\r\n\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}