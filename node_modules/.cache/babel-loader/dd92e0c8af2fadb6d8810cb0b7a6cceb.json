{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\src\\\\views\\\\Grades\\\\Grades.jsx\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport InputLabel from \"@material-ui/core/InputLabel\"; //import DateFnsUtils from '@date-io/date-fns';\n\nimport Card from \"components/Card/Card.jsx\";\nimport React, { Component } from 'react';\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.jsx\";\nimport { TableEditablePage } from \"views/Grades/editable_table.jsx\";\nimport InputForm from './InputForm';\nimport Point from 'views/Grades/edittable';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker } from 'material-ui-pickers';\nimport Grid from '@material-ui/core/Grid';\nimport App from 'views/Grades/table/index';\n\nfunction getData(url) {\n  return fetch(url, {\n    method: \"GET\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, cors, *same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: _defineProperty({\n      \"Content-Type\": \"application/json\"\n    }, \"Content-Type\", \"application/x-www-form-urlencoded\"),\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrer: \"no-referrer\" // no-referrer, *client\n    //body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n\n  }).then(function (response) {\n    return response.json();\n  }); // parses response to JSON\n}\n\nfunction postData(url, data) {\n  // Default options are marked with *\n  return fetch(url, {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, cors, *same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: _defineProperty({\n      \"Content-Type\": \"application/json\"\n    }, \"Content-Type\", \"application/x-www-form-urlencoded\"),\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrer: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n  }).then(function (response) {\n    return response.text();\n  }); // parses response to JSON\n}\n\nvar Grades =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Grades, _React$Component);\n\n  function Grades(props) {\n    var _this;\n\n    _classCallCheck(this, Grades);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grades).call(this, props));\n\n    _this.handleCheckboxChange = function (event) {\n      _this.setState({\n        checked: event.target.checked\n      });\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(function (state) {\n          return {\n            selected: state.data.map(function (n) {\n              return n.level;\n            })\n          };\n        });\n\n        _this.setState({\n          selected: []\n        });\n\n        console.log(name);\n\n        _this.setState(_defineProperty({}, name, event.target.checked));\n\n        _this.setState({\n          checked: !_this.state.checked\n        });\n      };\n    };\n\n    _this.updateInput = function (event) {\n      var state = {};\n      state[event.target.name] = event.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.updateInput1 = function (event) {\n      var state = {};\n      state[event.target.name] = event.target.checked;\n\n      _this.setState(state);\n    };\n\n    _this.handleChange11 = function (event) {\n      var _event$target = event.target,\n          value = _event$target.value,\n          min = _event$target.min,\n          max = _event$target.max;\n      value = Math.max(Number(min), Math.min(Number(max), Number(value)));\n\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var arr = [];\n\n      for (var key in _this.state) {\n        if (_this.state[key] === true) {\n          arr.push(key);\n        }\n      }\n\n      var data = {\n        check: arr.toString()\n      };\n      postData(\"http://localhost/test_project-master (4)/test_project-master/src/views/Grades/create.php\", _this.state).then(function (data) {\n        return console.log(JSON.stringify(data));\n      }).catch(function (error) {\n        return console.error(error);\n      });\n      e.target.reset(); // e.target.Checkbox.reset();\n    };\n\n    _this.state = {\n      data: [],\n      checked: false,\n      selected: {},\n      selectedDate: '',\n      value: '' // this.getlevel=this.getlevel.bind(this);\n\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateInput = _this.updateInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateInput1 = _this.updateInput1.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Grades, [{\n    key: \"componentDidMount\",\n\n    /*  getsubject=(e)=>{\n          e.preventDefault();\n          getData(`http://localhost/xx-master/src/views/Grades/gets.php`, this.state)\n              .then(data => console.log(JSON.stringify(data)))\n              .catch(error => console.error(error));\n      }*/\n    // _handleChange(event) {\n    //   let state = {};\n    //   this.setState({ value: event.target.value }) // I tried before target.value, or nativeEvent.value\n    // }\n    value: function componentDidMount() {\n      var th = this;\n      getData(\"http://localhost/test_project-master (4)/test_project-master/src/views/Grades/getallclass.php\").then(function (event) {\n        if (event != null) {\n          th.setState({\n            data: event //.data\n\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var styleInput = {\n        width: \"100%\",\n        alignContent: \"Center\",\n        height: \"25px\",\n        margin: \"3px 0\",\n        border: \"1px solid #000\",\n        borderBottomLeftRadius: \"10px\",\n        borderBottomRightRadius: \"10px\",\n        borderTopRightRadius: \"10px\",\n        borderTopLeftRadius: \"10px\",\n        paddingleft: \"10px\"\n      };\n      var classes = this.props.classes;\n      var selectedDate = this.state.selectedDate;\n      var msg;\n\n      if (this.state.checked) {\n        msg = \"checked\";\n      } else {\n        msg = \"unchecked\";\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(CustomTabs, {\n        headerColor: \"info\",\n        tabs: [{\n          tabName: \"Create Exam\",\n          tabIcon: BugReport,\n          tabContent: React.createElement(\"form\", {\n            action: \"create.php\",\n            onSubmit: this.handleSubmit,\n            style: {\n              alignContent: \"Center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, React.createElement(CardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215\n            },\n            __self: this\n          }, \"Form to add an Exam\")), React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216\n            },\n            __self: this\n          }, React.createElement(InputForm, {\n            inputType: \"text\",\n            inputKey: \"level\",\n            inputLabel: \"Class \",\n            updateInput: this.updateInput,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219\n            },\n            __self: this\n          }), React.createElement(InputForm, {\n            inputType: \"text\",\n            inputKey: \"subject\",\n            inputLabel: \"Subject  \",\n            updateInput: this.updateInput,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            style: {\n              display: 'flex',\n              width: '100%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221\n            },\n            __self: this\n          }, React.createElement(GridItem, {\n            xs: 12,\n            sm: 6,\n            md: 12,\n            style: {\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222\n            },\n            __self: this\n          }, React.createElement(InputLabel, {\n            style: {\n              color: \"#000\",\n              width: \"300px\",\n              alignContent: \"Center\",\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }, \" \", \"     \", \"Semester     \", \"   \", \"  \")), React.createElement(GridItem, {\n            xs: 12,\n            sm: 6,\n            md: 12,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226\n            },\n            __self: this\n          }, React.createElement(\"select\", {\n            name: \"sel_s\",\n            required: true,\n            style: styleInput,\n            onChange: this.updateInput\n            /*updateInput={this.updateInput} */\n            ,\n            value: this.state.value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228\n            },\n            __self: this\n          }), React.createElement(\"option\", {\n            name: \"sel_s\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229\n            },\n            __self: this\n          }, \"1st Semester\"), React.createElement(\"option\", {\n            name: \"sel_s\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          }, \"2nd Semester\")))), React.createElement(InputForm, {\n            inputType: \"number\",\n            inputKey: \"max\",\n            inputLabel: \"Max Limit \",\n            updateInput: this.updateInput,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            style: {\n              display: 'flex',\n              width: '100%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238\n            },\n            __self: this\n          }, React.createElement(GridItem, {\n            xs: 12,\n            sm: 6,\n            md: 12,\n            style: {\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239\n            },\n            __self: this\n          }, React.createElement(InputLabel, {\n            style: {\n              color: \"#000\",\n              alignContent: \"Center\",\n              width: \"100%\",\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240\n            },\n            __self: this\n          }, \" Type of Exam \")), React.createElement(GridItem, {\n            xs: 12,\n            sm: 6,\n            md: 12,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242\n            },\n            __self: this\n          }, React.createElement(\"select\", {\n            name: \"sel_t\",\n            required: true,\n            style: styleInput,\n            onChange: this.updateInput\n            /*updateInput={this.updateInput}*/\n            ,\n            value: this.state.value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244\n            },\n            __self: this\n          }), React.createElement(\"option\", {\n            name: \"sel_t\",\n            value: \"Daily Exam\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245\n            },\n            __self: this\n          }, \"Daily Exam\"), React.createElement(\"option\", {\n            name: \"sel_t\",\n            value: \"Mid Exam\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 246\n            },\n            __self: this\n          }, \"Mid Exam\"), React.createElement(\"option\", {\n            name: \"sel_t\",\n            value: \"Final Exam\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247\n            },\n            __self: this\n          }, \"Final Exam\")))), React.createElement(InputForm, {\n            inputType: \"date\",\n            inputKey: \"date\",\n            inputLabel: \"Date of Exam  \",\n            updateInput: this.updateInput,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253\n            },\n            __self: this\n          }), React.createElement(\"input\", {\n            value: this.state.value,\n            onChange: this.handleChange11,\n            type: \"number\",\n            min: \"1\",\n            max: \"30\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 255\n            },\n            __self: this\n          })), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 355\n            },\n            __self: this\n          }, React.createElement(Button, {\n            color: \"info\",\n            name: \"create\",\n            type: \"submit\",\n            value: \"create\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 356\n            },\n            __self: this\n          }, \"Create \")))\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(CustomTabs, {\n        headerColor: \"info\",\n        tabs: [{\n          tabName: \"Create_An_Exam\",\n          tabIcon: BugReport,\n          tabContent: React.createElement(GridContainer, {\n            justify: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 383\n            },\n            __self: this\n          }, React.createElement(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 8,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 384\n            },\n            __self: this\n          }, React.createElement(CardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 385\n            },\n            __self: this\n          }), React.createElement(CardBody, {\n            justify: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 386\n            },\n            __self: this\n          }, React.createElement(Point, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 389\n            },\n            __self: this\n          }))))\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Grades;\n}(React.Component);\n\nexport { Grades as default };","map":{"version":3,"sources":["C:\\xampp1\\htdocs\\test_project-master (4)\\test_project-master\\src\\views\\Grades\\Grades.jsx"],"names":["BugReport","InputLabel","Card","React","Component","GridItem","CardBody","CardFooter","CardHeader","GridContainer","Button","CustomTabs","TableEditablePage","InputForm","Point","Checkbox","FormControlLabel","MuiPickersUtilsProvider","TimePicker","DatePicker","Grid","App","getData","url","fetch","method","mode","cache","credentials","headers","redirect","referrer","then","response","json","postData","data","body","JSON","stringify","text","Grades","props","handleCheckboxChange","event","setState","checked","target","handleChange","name","state","selected","map","n","level","console","log","updateInput","value","updateInput1","handleChange11","min","max","Math","Number","handleSubmit","e","preventDefault","arr","key","push","check","toString","catch","error","reset","selectedDate","bind","th","styleInput","width","alignContent","height","margin","border","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","borderTopLeftRadius","paddingleft","classes","msg","tabName","tabIcon","tabContent","display","textAlign","color"],"mappings":"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","sourcesContent":["import BugReport from \"@material-ui/icons/BugReport\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\n//import DateFnsUtils from '@date-io/date-fns';\nimport Card from \"components/Card/Card.jsx\";\n\nimport React, { Component } from 'react';\n\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.jsx\";\nimport { TableEditablePage } from \"views/Grades/editable_table.jsx\";\nimport InputForm from './InputForm';\nimport Point from 'views/Grades/edittable';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker } from 'material-ui-pickers';\nimport Grid from '@material-ui/core/Grid';\n\nimport App from 'views/Grades/table/index';\n\n\nfunction getData(url) {\n    return fetch(url, {\n        method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n            \"Content-Type\": \"application/json\",\n\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        redirect: \"follow\", // manual, *follow, error\n        referrer: \"no-referrer\", // no-referrer, *client\n        //body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    })\n        .then(response => response.json()); // parses response to JSON\n}\nfunction postData(url, data) {\n    // Default options are marked with *\n    return fetch(url, {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        redirect: \"follow\", // manual, *follow, error\n        referrer: \"no-referrer\", // no-referrer, *client\n        body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    })\n        .then(response => response.text()); // parses response to JSON\n}\n\nexport default class Grades extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            checked: false,\n            selected: {},\n            selectedDate: '',\n            value: '',\n        }\n        // this.getlevel=this.getlevel.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.updateInput = this.updateInput.bind(this);\n        this.updateInput1 = this.updateInput1.bind(this);\n\n    }\n    handleCheckboxChange = event => {\n        this.setState({ checked: event.target.checked })\n    }\n    handleChange = name => event => {\n\n        this.setState(state => ({ selected: state.data.map(n => n.level) }));\n\n\n        this.setState({ selected: [] });\n        console.log(name);\n\n        this.setState({ [name]: event.target.checked });\n        this.setState({ checked: !this.state.checked });\n\n    };\n\n    updateInput = (event) => {\n        let state = {};\n        state[event.target.name] = event.target.value;\n        this.setState(state);\n    }\n    updateInput1 = (event) => {\n        let state = {};\n        state[event.target.name] = event.target.checked;\n        this.setState(state);\n    }\n    handleChange11 = event => {\n        let { value, min, max } = event.target;\n        value = Math.max(Number(min), Math.min(Number(max), Number(value)));\n\n        this.setState({ value });\n    };\n    /*  getlevel=(e)=>{\n          e.preventDefault();\n          getData(`http://localhost/xx-master/src/views/Grades/get.php`, this.state)\n              .then(data => console.log(JSON.stringify(data)))\n              .catch(error => console.error(error));\n      }*/\n\n    /*\n        componentDidMount() {\n            postData(`http://localhost/test_project-master (4)/test_project-master/src/views/Grades/create.php`, this.state)\n                .then(data => console.log(JSON.stringify(data)))\n                .catch(error => console.error(error));\n        }\n    */\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let arr = [];\n        for (var key in this.state) {\n            if (this.state[key] === true) {\n                arr.push(key);\n            }\n        }\n        let data = {\n            check: arr.toString()\n        };\n\n        postData(`http://localhost/test_project-master (4)/test_project-master/src/views/Grades/create.php`, this.state)\n            .then(data => console.log(JSON.stringify(data)))\n            .catch(error => console.error(error));\n\n        e.target.reset();\n        // e.target.Checkbox.reset();\n\n\n\n    }\n    /*  getsubject=(e)=>{\n          e.preventDefault();\n          getData(`http://localhost/xx-master/src/views/Grades/gets.php`, this.state)\n              .then(data => console.log(JSON.stringify(data)))\n              .catch(error => console.error(error));\n      }*/\n\n\n    // _handleChange(event) {\n    //   let state = {};\n    //   this.setState({ value: event.target.value }) // I tried before target.value, or nativeEvent.value\n    // }\n    componentDidMount() {\n        var th = this;\n        getData(`http://localhost/test_project-master (4)/test_project-master/src/views/Grades/getallclass.php`)\n\n            .then(function (event) {\n                if (event != null) {\n                    th.setState({\n                        data: event//.data\n\n                    });\n                }\n            })\n\n\n    }\n\n    render() {\n        const styleInput = {\n            width: \"100%\",\n            alignContent: \"Center\",\n            height: \"25px\",\n            margin: \"3px 0\",\n            border: \"1px solid #000\",\n            borderBottomLeftRadius: \"10px\",\n            borderBottomRightRadius: \"10px\",\n            borderTopRightRadius: \"10px\",\n            borderTopLeftRadius: \"10px\",\n            paddingleft: \"10px\",\n\n        };\n        const { classes } = this.props;\n        const { selectedDate } = this.state;\n\n        var msg;\n        if (this.state.checked) {\n            msg = \"checked\";\n        } else {\n            msg = \"unchecked\";\n        }\n\n        return (\n            <div>\n                <GridContainer justify=\"center\">\n                    <GridItem xs={12} sm={12} md={8}>\n                        <CustomTabs\n                            headerColor=\"info\"\n                            tabs={[\n                                {\n                                    tabName: \"Create Exam\",\n                                    tabIcon: BugReport,\n                                    tabContent: (\n                                        <form action=\"create.php\" onSubmit={this.handleSubmit} style={{ alignContent: \"Center\" }}  >\n                                            {/* <GridContainer justify=\"center\">   \n                         \n                             \n                        <GridItem xs={12} sm={12} md={10}>*/}\n                                            <CardHeader><h3>Form to add an Exam</h3></CardHeader>\n                                            <CardBody>\n\n\n                                                <InputForm inputType=\"text\" inputKey=\"level\" inputLabel=\"Class \" updateInput={this.updateInput} />\n                                                <InputForm inputType=\"text\" inputKey=\"subject\" inputLabel=\"Subject  \" updateInput={this.updateInput} />\n                                                <div style={{ display: 'flex', width: '100%' }}>\n                                                    <GridItem xs={12} sm={6} md={12} style={{ textAlign: \"center\" }} >\n\n                                                        <InputLabel style={{ color: \"#000\", width: \"300px\", alignContent: \"Center\", textAlign: \"center\" }}> {\"     \"}Semester     {\"   \"}  </InputLabel>\n                                                    </GridItem>\n                                                    <GridItem xs={12} sm={6} md={12}>\n                                                        <select name=\"sel_s\" required style={styleInput} onChange={this.updateInput}   /*updateInput={this.updateInput} */ value={this.state.value}>\n                                                            <option></option>\n                                                            <option name=\"sel_s\">1st Semester</option>\n                                                            <option name=\"sel_s\">2nd Semester</option>\n                                                        </select>\n                                                    </GridItem>\n                                                </div>\n\n                                                <InputForm inputType=\"number\" inputKey=\"max\" inputLabel=\"Max Limit \" updateInput={this.updateInput} />\n\n\n                                                <div style={{ display: 'flex', width: '100%' }}>\n                                                    <GridItem xs={12} sm={6} md={12} style={{ textAlign: \"center\" }} >\n                                                        <InputLabel style={{ color: \"#000\", alignContent: \"Center\", width: \"100%\", textAlign: \"center\" }}> Type of Exam </InputLabel>\n                                                    </GridItem>\n                                                    <GridItem xs={12} sm={6} md={12}>\n                                                        <select name=\"sel_t\" required style={styleInput} onChange={this.updateInput} /*updateInput={this.updateInput}*/ value={this.state.value}>\n                                                            <option></option>\n                                                            <option name=\"sel_t\" value=\"Daily Exam\">Daily Exam</option>\n                                                            <option name=\"sel_t\" value=\"Mid Exam\">Mid Exam</option>\n                                                            <option name=\"sel_t\" value=\"Final Exam\">Final Exam</option>\n                                                        </select>\n                                                    </GridItem>\n                                                </div>\n\n\n                                                <InputForm inputType=\"date\" inputKey=\"date\" inputLabel=\"Date of Exam  \" updateInput={this.updateInput} />\n\n                                                <input\n                                                    value={this.state.value}\n                                                    onChange={this.handleChange11}\n                                                    type=\"number\"\n                                                    min=\"1\"\n                                                    max=\"30\"\n                                                />\n\n                                                {/*}\n\n                                                <table style={{ textAlign: \"right\"}}>\n                <thead key=\"one\">\n                    <tr>\n                       \n                            <th>ClassLevel</th>\n\n                            <th style={{ textAlign: 'right' }}>  Section</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n\n                        this.state.data.map((data,i) => {\n                            if (this.state.data != \"\") {\n\n                                return (\n                                    <tr>\n                                    <td><FormControlLabel\n                                    control={\n                                        <Checkbox\n                                        //{...data}\n                                            checked={this.state.checked}\n                                            onChange={this.handleChange('checked')}\n                                            value=\"checked\"\n                                            name=\"check\"    \n                                            //selected={this.state.selected[data.level]}      \n                                        />\n                                    }\n                                    //label={data.level}\n                                />\n                                </td>\n                                <td>{data.level}</td>\n                                <td>{data.id_class}</td>\n                                </tr>\n                                );\n                            }\n\n                        }\n\n                        )\n                    }\n\n                </tbody>\n            </table>\n                                              \n                */}\n                                                {/*}   \n                                                \n                                                {\n                                                    this.state.data.map((data, i) => {\n                                                        \n\n                                                            return (\n                                                                <div key ={i}>\n                                                                <table>\n                                                                    <th>level</th>\n                                                                    <th>section</th>\n                                                                    <tr>\n                                                                <td><FormControlLabel\n                                                                control={\n                                                                    <Checkbox\n                                                                    //{...data}\n                                                                        checked={this.state.checked}\n                                                                        checked={this.state.selected[data.level,data.id_class]}\n                                                                        onChange={this.handleChange('checked')}\n                                                                        onChange={this.updateInput}\n                                                                        value={data.level +data.id_class}\n                                                                        name=\"check[]\"\n                                                                        id=\"check\"  \n                                                                        //selected={this.state.selected[data.level]}      \n                                                                    />\n                                                                }\n                                                                //label={data.level}\n                                                            />\n                                                            </td>\n                                                            <td>{data.level}</td>\n                                                            <td>{data.id_class}</td>\n                                                            </tr>\n                                                            </table>\n                                                            </div>                                                          \n                                                            );   \n                                                    }\n\n                                                    )\n                                                }\n\n                                              \n                                                <p>this box is {msg}.</p>\n*/}\n                                            </CardBody>\n                                            <CardFooter>\n                                                <Button color=\"info\" name=\"create\" type=\"submit\" value=\"create\">Create </Button>\n                                            </CardFooter>\n                                            {/* </GridItem>\n                              \n                        </GridContainer>  */}\n\n                                        </form>\n\n                                    ),\n                                }\n                            ]}\n\n                        >\n\n                        </CustomTabs>\n                    </GridItem>\n                </GridContainer>\n                <div >\n                    <GridContainer justify=\"center\">\n                        <GridItem xs={12} sm={12} md={8}>\n                            <CustomTabs\n                                headerColor=\"info\"\n                                tabs={[\n                                    {\n                                        tabName: \"Create_An_Exam\",\n                                        tabIcon: BugReport,\n                                        tabContent: (\n                                            <GridContainer justify=\"center\">\n                                                <GridItem xs={12} sm={12} md={8} >\n                                                    <CardHeader></CardHeader>\n                                                    <CardBody justify=\"center\">\n                                                        {/*}  <App />\n                                                    <TableEditablePage/>*/}\n                                                        <Point />\n                                                    </CardBody>\n\n                                                </GridItem>\n                                            </GridContainer>\n\n                                        ),\n                                    }\n                                ]}\n\n                            >\n\n                            </CustomTabs>\n                        </GridItem>\n                    </GridContainer>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}