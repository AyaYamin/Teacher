{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp1\\\\htdocs\\\\test_project-master (4)\\\\test_project-master\\\\src\\\\views\\\\Activities_grades\\\\text.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Modal, Button } from 'antd';\n\nvar SimpleModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SimpleModal, _React$Component);\n\n  function SimpleModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SimpleModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SimpleModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ModalText: 'Content of the modal',\n      visible: false,\n      confirmLoading: false\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleOk = function () {\n      _this.setState({\n        ModalText: 'The modal will be closed after two seconds',\n        confirmLoading: true\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          visible: false,\n          confirmLoading: false\n        });\n      }, 2000);\n    };\n\n    _this.handleCancel = function () {\n      console.log('Clicked cancel button');\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SimpleModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          visible = _this$state.visible,\n          confirmLoading = _this$state.confirmLoading,\n          ModalText = _this$state.ModalText;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Open Modal with async logic\"), React.createElement(Modal, {\n        title: \"Title\",\n        visible: visible,\n        onOk: this.handleOk,\n        confirmLoading: confirmLoading,\n        onCancel: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, ModalText)));\n    }\n  }]);\n\n  return SimpleModal;\n}(React.Component);","map":{"version":3,"sources":["C:\\xampp1\\htdocs\\test_project-master (4)\\test_project-master\\src\\views\\Activities_grades\\text.jsx"],"names":["React","ReactDOM","Modal","Button","SimpleModal","state","ModalText","visible","confirmLoading","showModal","setState","handleOk","setTimeout","handleCancel","console","log","Component"],"mappings":";;;;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP;AACA,OAAO,aAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;;IAEMC,W;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,sBADL;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,cAAc,EAAE;AAHV,K;;UAMRC,S,GAAY,YAAM;AAChB,YAAKC,QAAL,CAAc;AACZH,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,K;;UAEDI,Q,GAAW,YAAM;AACf,YAAKD,QAAL,CAAc;AACZJ,QAAAA,SAAS,EAAE,4CADC;AAEZE,QAAAA,cAAc,EAAE;AAFJ,OAAd;;AAIAI,MAAAA,UAAU,CAAC,YAAM;AACf,cAAKF,QAAL,CAAc;AACZH,UAAAA,OAAO,EAAE,KADG;AAEZC,UAAAA,cAAc,EAAE;AAFJ,SAAd;AAID,OALS,EAKP,IALO,CAAV;AAMD,K;;UAEDK,Y,GAAe,YAAM;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AACA,YAAKL,QAAL,CAAc;AACZH,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,K;;;;;;;6BAEQ;AAAA,wBACwC,KAAKF,KAD7C;AAAA,UACCE,OADD,eACCA,OADD;AAAA,UACUC,cADV,eACUA,cADV;AAAA,UAC0BF,SAD1B,eAC0BA,SAD1B;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAE,KAAKG,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAIE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,OAAO,EAAEF,OAFX;AAGE,QAAA,IAAI,EAAE,KAAKI,QAHb;AAIE,QAAA,cAAc,EAAEH,cAJlB;AAKE,QAAA,QAAQ,EAAE,KAAKK,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIP,SAAJ,CAPF,CAJF,CADF;AAgBD;;;;EAnDuBN,KAAK,CAACgB,S","sourcesContent":["\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport { Modal, Button } from 'antd';\r\n\r\nclass SimpleModal extends React.Component {\r\n  state = {\r\n    ModalText: 'Content of the modal',\r\n    visible: false,\r\n    confirmLoading: false,\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  }\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      ModalText: 'The modal will be closed after two seconds',\r\n      confirmLoading: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        visible: false,\r\n        confirmLoading: false,\r\n      });\r\n    }, 2000);\r\n  }\r\n\r\n  handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { visible, confirmLoading, ModalText } = this.state;\r\n    return (\r\n      <div>\r\n        <Button type=\"primary\" onClick={this.showModal}>\r\n          Open Modal with async logic\r\n        </Button>\r\n        <Modal\r\n          title=\"Title\"\r\n          visible={visible}\r\n          onOk={this.handleOk}\r\n          confirmLoading={confirmLoading}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <p>{ModalText}</p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}